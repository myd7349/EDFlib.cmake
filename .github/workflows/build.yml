name: EDFlib

on:
  push:
  pull_request:
    types: [ opened, ready_for_review, reopened, synchronize ]

env:
  EDFLIB_VERSION: v1.26
  BUILD_TYPE: Release
  CFLAGS: "-fPIC -O2 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -DEDFLIB_SO_DLL -DEDFLIB_BUILD"

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macOS-latest, ubuntu-latest ]

    steps:
      - name: Run uname
        run: uname -a

      - name: Checkout
        uses: actions/checkout@v4

      - name: Compile & run (on Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          gcc -c main.c
          gcc -o main main.o
          ./main

      - name: Compile & run (on macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          sw_vers -productVersion
          clang -c main.c
          clang -o main main.o
          ./main

      - name: Clone EDFlib
        run: |
          git clone https://gitlab.com/Teuniz/EDFlib.git
          pushd EDFlib
          git checkout ${{ env.EDFLIB_VERSION }}
          git apply ../apple.patch
          git diff
          popd

      - name: Configure & build (on Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          pushd EDFlib
          gcc ${{ env.CFLAGS }} -fvisibility=hidden -c edflib.c
          gcc -o edflib.so --shared edflib.o
          file edflib.so
          echo ----------------------------------------
          nm -CD edflib.so
          echo ----------------------------------------
          popd

      - name: Configure & build (on macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          pushd EDFlib
          clang ${{ env.CFLAGS }} -dynamiclib -fvisibility=hidden -o edflib.dylib edflib.c
          ls
          file edflib.dylib
          echo ----------------------------------------
          nm -gU edflib.dylib || true
          echo ----------------------------------------
          rm edflib.dylib
          clang ${{ env.CFLAGS }} -dynamiclib -o edflib.dylib edflib.c
          nm -gU edflib.dylib
          echo ----------------------------------------
          popd


# References:
# https://gist.github.com/ozh/4734410
# [How to use the __attribute__((visibility("default")))?](https://stackoverflow.com/questions/52719364/how-to-use-the-attribute-visibilitydefault)
# https://github.com/nihui/opencv-mobile/blob/master/.github/workflows/release.yml
# [How to find out Mac OS X version from Terminal?](https://superuser.com/questions/75166/how-to-find-out-mac-os-x-version-from-terminal)
# [Exclude an exit code in github actions workflow result status](https://stackoverflow.com/questions/69182773/exclude-an-exit-code-in-github-actions-workflow-result-status)
# [How to compile shared lib with clang on osx](https://stackoverflow.com/questions/21907504/how-to-compile-shared-lib-with-clang-on-osx)
# [What are the differences between .so and .dylib on macOS?](https://stackoverflow.com/questions/2339679/what-are-the-differences-between-so-and-dylib-on-macos)
# [How to compile shared lib with clang on osx](https://stackoverflow.com/questions/21907504/how-to-compile-shared-lib-with-clang-on-osx)
# [How to print a list of symbols exported from a dynamic library](https://stackoverflow.com/questions/4506121/how-to-print-a-list-of-symbols-exported-from-a-dynamic-library)
