name: EDFlib

on:
  push:
  pull_request:
    types: [ opened, ready_for_review, reopened, synchronize ]

env:
  EDFLIB_VERSION: v1.26
  BUILD_TYPE: Release
  INSTALL_PREFIX: install

jobs:
  build-windows:
    name: build (${{ matrix.os }}, ${{ matrix.arch }}, ${{ matrix.linkage }})
    if: >-
      github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        arch: [ Win32, x64, ARM, ARM64 ]
        linkage: [ dynamic, static ]
        include:
          - generator: Visual Studio 17 2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone EDFlib
        run: |
          git clone https://gitlab.com/Teuniz/EDFlib.git
          pushd EDFlib
          git checkout ${{ env.EDFLIB_VERSION }}
          popd

      - name: Copy CMakeLists.txt
        run: |
          Copy-Item CMakeLists.txt -Destination .\EDFlib
        shell: pwsh

      - name: Configure
        run: >
          cmake
          -S EDFlib
          -B build
          -G "${{ matrix.generator }}"
          -A ${{ matrix.arch }}
          ${{ matrix.linkage == 'dynamic' && '-DBUILD_SHARED_LIBS=ON' || '-DBUILD_SHARED_LIBS=OFF' }}
          -DBUILD_TESTING=ON
          -DBUILD_TOOLS=ON
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }}

      - name: Build & Install
        run: |
          cmake --build build --config ${{ env.BUILD_TYPE }} --target install

      - name: Run unit tests
        if: ${{ matrix.arch == 'Win32' || matrix.arch == 'x64' }}
        run: |
          pushd build
          ctest -C ${{ env.BUILD_TYPE }}
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: EDFlib-${{ env.EDFLIB_VERSION }}-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.linkage }}
          path: ${{ env.INSTALL_PREFIX }}

  build-linux:
    name: build (${{ matrix.os }}, ${{ matrix.arch.name }}, ${{ matrix.linkage }})
    if: >-
      github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        arch:
          - name: arm
            gcc: arm-linux-gnueabihf

          - name: arm64
            gcc: aarch64-linux-gnu

          - name: x64
            gcc: gcc
        linkage: [ dynamic, static ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone EDFlib
        run: |
          git clone https://gitlab.com/Teuniz/EDFlib.git
          pushd EDFlib
          git checkout ${{ env.EDFLIB_VERSION }}
          popd

      - name: Copy CMakeLists.txt
        run: |
          cp CMakeLists.txt ./EDFlib

      - name: Run uname
        run: uname -m

      - name: Install gcc ${{ matrix.arch.name }} toolchain
        if: ${{ matrix.arch.name == 'arm' || matrix.arch.name == 'arm64' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-${{ matrix.arch.gcc }}
          echo "ARM_C_COMPILER=${{ matrix.arch.gcc }}-gcc" >> $GITHUB_ENV

      - name: Configure
        run: >
          cmake
          -S EDFlib
          -B build
          ${{ matrix.linkage == 'dynamic' && '-DBUILD_SHARED_LIBS=ON' || '-DBUILD_SHARED_LIBS=OFF' }}
          -DBUILD_TESTING=ON
          -DBUILD_TOOLS=ON
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          ${{ matrix.arch.name == 'x64' && '-DCMAKE_C_COMPILER=gcc' || '-DCMAKE_C_COMPILER=$ARM_C_COMPILER' }}
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }}

      - name: Build & Install
        run: |
          pushd build
          make install
          popd

      - name: Run file command
        run: file ./${{ env.INSTALL_PREFIX }}/lib/libEDFlib.*

      - name: Run unit tests
        if: ${{ matrix.arch.name == 'x64' }}
        run: |
          pushd build
          make test
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: EDFlib-${{ env.EDFLIB_VERSION }}-${{ runner.os }}-${{ matrix.arch.name }}-${{ matrix.linkage }}
          path: ${{ env.INSTALL_PREFIX }}

  build-osx:
    name: build (${{ matrix.os }}, ${{ matrix.arch }}, ${{ matrix.linkage }})
    if: >-
      github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macOS-latest ]
        arch: [ arm64, x86_64 ]
        linkage: [ dynamic, static ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone EDFlib
        run: |
          git clone https://gitlab.com/Teuniz/EDFlib.git
          pushd EDFlib
          git checkout ${{ env.EDFLIB_VERSION }}
          popd

      - name: Copy CMakeLists.txt
        run: |
          cp CMakeLists.txt ./EDFlib

      - name: Run uname
        run: uname -m

      - name: Configure
        run: >
          cmake
          -S EDFlib
          -B build
          ${{ matrix.linkage == 'dynamic' && '-DBUILD_SHARED_LIBS=ON' || '-DBUILD_SHARED_LIBS=OFF' }}
          -DBUILD_TESTING=ON
          -DBUILD_TOOLS=ON
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }}
          -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}

      - name: Build & Install
        run: |
          pushd build
          make install
          popd

      - name: Run file command
        run: file ./${{ env.INSTALL_PREFIX }}/lib/libEDFlib.*

      - name: Run unit tests
        run: |
          pushd build
          make test
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: EDFlib-${{ env.EDFLIB_VERSION }}-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.linkage }}
          path: ${{ env.INSTALL_PREFIX }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build-windows, build-linux, build-osx ]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: ls -R

      - name: Create archives
        run: |
          7z a EDFlib-v${{ github.ref_name }}-linux-arm-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Linux-arm-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-linux-arm-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Linux-arm-static/*
          7z a EDFlib-v${{ github.ref_name }}-linux-arm64-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Linux-arm64-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-linux-arm64-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Linux-arm64-static/*
          7z a EDFlib-v${{ github.ref_name }}-linux-x64-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Linux-x64-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-linux-x64-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Linux-x64-static/*
          7z a EDFlib-v${{ github.ref_name }}-osx-arm64-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-macOS-arm64-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-osx-arm64-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-macOS-arm64-static/*
          7z a EDFlib-v${{ github.ref_name }}-osx-x64-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-macOS-x86_64-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-osx-x64-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-macOS-x86_64-static/*
          7z a EDFlib-v${{ github.ref_name }}-win-arm-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-ARM-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-win-arm-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-ARM-static/*
          7z a EDFlib-v${{ github.ref_name }}-win-arm64-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-ARM64-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-win-arm64-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-ARM64-static/*
          7z a EDFlib-v${{ github.ref_name }}-win-x86-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-Win32-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-win-x86-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-Win32-static/*
          7z a EDFlib-v${{ github.ref_name }}-win-x64-dynamic.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-x64-dynamic/*
          7z a EDFlib-v${{ github.ref_name }}-win-x64-static.zip ./EDFlib-${{ env.EDFLIB_VERSION }}-Windows-x64-static/*

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          generate_release_notes: true
          files: |
            EDFlib*.zip
